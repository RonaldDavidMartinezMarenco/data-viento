-- SCHEMA DATA-VIENTO

-- USER MANAGMENT

CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    full_name VARCHAR(150),
    user_type ENUM('admin', 'standard_user') default 'standard_user',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE,
    preferred_units ENUM('metric','imperial') DEFAULT 'metric'
);


-- user preferences not general
CREATE TABLE user_preferences (
    preference_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    preferred_temperature_unit ENUM('celsius','fahrenheit','kelvin') DEFAULT 'celsius',
    preferred_wind_speed_unit ENUM('kmh','mph','ms','knots') DEFAULT 'kmh',
    preferred_precipitation_unit ENUM('mm','inch') DEFAULT 'mm',
    default_timezone VARCHAR(50) DEFAULT 'auto',
    notification_enabled BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- user locations
CREATE TABLE user_locations (
    user_location_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    location_id INT NOT NULL,
    custom_name VARCHAR(100),
    is_primary BOOLEAN DEFAULT FALSE,
    notification_enabled BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_accessed TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);


-- LOCATIONS TABLES

CREATE TABLE locations (
    location_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    latitude DECIMAL(10,7) NOT NULL,
    longitude DECIMAL(10,7) NOT NULL,
    elevation DECIMAL(8,2),
    country VARCHAR(2),
    country_name VARCHAR(100),
    state VARCHAR(100),
    timezone VARCHAR(50),
    admin1 VARCHAR(100),
    admin2 VARCHAR(100),
    admin3 VARCHAR(100),
    admin4 VARCHAR(100),
    postcodes JSON,
    feature_code VARCHAR(10),
    population INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE location_names (
    name_id INT AUTO_INCREMENT PRIMARY KEY,
    location_id INT NOT NULL,
    language_code VARCHAR(5),
    name VARCHAR(200),
    is_ascii BOOLEAN DEFAULT FALSE,
    is_feature_name BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);


-- Model Tables

CREATE TABLE weather_models (
    model_id INT AUTO_INCREMENT PRIMARY KEY,
    model_code VARCHAR(50) NOT NULL UNIQUE,
    model_name VARCHAR(100),
    provider VARCHAR(100),
    provider_country VARCHAR(100),
    resolution_km DECIMAL(6,2),
    resolution_degrees DECIMAL(8,6),
    forecast_days INTEGER,
    update_frequency_hours INTEGER,
    temporal_resolution ENUM('15minutely','hourly','3hourly','6hourly','daily'),
    geographic_coverage ENUM('global','regional','local'),
    model_type ENUM('weather','marine','air_quality','satellite_radiation','climate'),
    is_active BOOLEAN DEFAULT TRUE,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE weather_parameters (
    parameter_id INT AUTO_INCREMENT PRIMARY KEY,
    parameter_code VARCHAR(100) NOT NULL UNIQUE,
    parameter_name VARCHAR(150),
    description TEXT,
    unit VARCHAR(20),
    parameter_category VARCHAR(50),
    data_type VARCHAR(50),
    altitude_level VARCHAR(50),
    is_surface BOOLEAN DEFAULT TRUE,
    api_endpoint ENUM('forecast','air_quality','marine','satellite_radiation','climate'),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE model_parameters (
    model_parameter_id INT AUTO_INCREMENT PRIMARY KEY,
    model_id INT NOT NULL,
    parameter_id INT NOT NULL,
    is_available BOOLEAN DEFAULT TRUE,
    data_quality ENUM('high','medium','low','interpolated') DEFAULT 'high',
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY (model_id, parameter_id),
    FOREIGN KEY (model_id) REFERENCES weather_models(model_id),
    FOREIGN KEY (parameter_id) REFERENCES weather_parameters(parameter_id)
);

-- actual weather table
CREATE TABLE current_weather (
    current_id INT AUTO_INCREMENT PRIMARY KEY,
    location_id INT NOT NULL,
    model_id INT,
    observation_time TIMESTAMP NOT NULL,
    temperature_2m DECIMAL(6,2),
    relative_humidity_2m DECIMAL(5,2),
    apparent_temperature DECIMAL(6,2),
    precipitation DECIMAL(8,2),
    weather_code INTEGER,
    cloud_cover INTEGER,
    wind_speed_10m DECIMAL(6,2),
    wind_direction_10m INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY unique_location (location_id),
    FOREIGN KEY (location_id) REFERENCES locations(location_id),
    FOREIGN KEY (model_id) REFERENCES weather_models(model_id)
);

-- weather forecast data
CREATE TABLE weather_forecasts (
    forecast_id INT AUTO_INCREMENT PRIMARY KEY,
    location_id INT NOT NULL,
    model_id INT NOT NULL,
    forecast_reference_time TIMESTAMP NOT NULL,
    generation_time_ms DECIMAL(8,3),
    timezone VARCHAR(50),
    utc_offset_seconds INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (location_id) REFERENCES locations(location_id),
    FOREIGN KEY (model_id) REFERENCES weather_models(model_id)
);

CREATE TABLE forecast_data (
    data_id INT AUTO_INCREMENT PRIMARY KEY,
    forecast_id INT NOT NULL,
    parameter_id INT NOT NULL,
    valid_time TIMESTAMP NOT NULL,
    forecast_hour INTEGER,
    value DECIMAL(12,6),
    text_value VARCHAR(100),
    unit VARCHAR(20),
    confidence_score DECIMAL(5,4),
    quality_flag ENUM('good','fair','poor','interpolated') DEFAULT 'good',
    UNIQUE KEY unique_forecast_param_time (forecast_id, parameter_id, valid_time),
    FOREIGN KEY (forecast_id) REFERENCES weather_forecasts(forecast_id),
    FOREIGN KEY (parameter_id) REFERENCES weather_parameters(parameter_id)
);

CREATE TABLE weather_forecasts_daily (
    forecast_day_id INT AUTO_INCREMENT PRIMARY KEY,
    location_id INT NOT NULL,
    model_id INT NOT NULL,
    valid_date DATE NOT NULL,
    temperature_2m_max DECIMAL(6,2),
    temperature_2m_min DECIMAL(6,2),
    temperature_2m_mean DECIMAL(6,2),
    precipitation_sum DECIMAL(8,2),
    precipitation_hours INTEGER,
    precipitation_probability_max INTEGER,
    weather_code INTEGER,
    sunrise TIME,
    sunset TIME,
    sunshine_duration INTEGER,
    uv_index_max INTEGER,
    wind_speed_10m_max DECIMAL(6,2),
    wind_gusts_10m_max DECIMAL(6,2),
    wind_direction_10m_dominant INTEGER,
    forecast_reference_time TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY unique_location_model_date (location_id, model_id, valid_date),
    FOREIGN KEY (location_id) REFERENCES locations(location_id),
    FOREIGN KEY (model_id) REFERENCES weather_models(model_id)
);

-- Air Quality
CREATE TABLE air_quality_current (
    air_quality_current_id INT AUTO_INCREMENT PRIMARY KEY,
    location_id INT NOT NULL,
    observation_time TIMESTAMP NOT NULL,
    pm2_5 DECIMAL(8,2),
    pm10 DECIMAL(8,2),
    european_aqi INTEGER,
    us_aqi INTEGER,
    nitrogen_dioxide DECIMAL(8,2),
    ozone DECIMAL(8,2),
    sulphur_dioxide DECIMAL(8,2),
    carbon_monoxide DECIMAL(8,2),
    dust DECIMAL(8,2),
    ammonia DECIMAL(8,2),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY unique_location (location_id),
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);

CREATE TABLE air_quality_forecasts (
    air_quality_id INT AUTO_INCREMENT PRIMARY KEY,
    location_id INT NOT NULL,
    model_id INT NOT NULL,
    forecast_reference_time TIMESTAMP NOT NULL,
    data_domain ENUM('cams_europe','cams_global','auto') DEFAULT 'auto',
    generation_time_ms DECIMAL(8,3),
    timezone VARCHAR(50),
    utc_offset_seconds INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (location_id) REFERENCES locations(location_id),
    FOREIGN KEY (model_id) REFERENCES weather_models(model_id)
);

CREATE TABLE air_quality_data (
    data_id INT AUTO_INCREMENT PRIMARY KEY,
    air_quality_id INT NOT NULL,
    parameter_id INT NOT NULL,
    valid_time TIMESTAMP NOT NULL,
    value DECIMAL(12,6),
    unit VARCHAR(20),
    aqi_category ENUM('good','fair','moderate','poor','very_poor','extremely_poor'),
    health_impact ENUM('low','moderate','high','very_high'),
    quality_flag ENUM('good','fair','poor','missing') DEFAULT 'good',
    UNIQUE KEY unique_aq_param_time (air_quality_id, parameter_id, valid_time),
    FOREIGN KEY (air_quality_id) REFERENCES air_quality_forecasts(air_quality_id),
    FOREIGN KEY (parameter_id) REFERENCES weather_parameters(parameter_id)
);

-- Marine Weather
CREATE TABLE marine_current (
    marine_current_id INT AUTO_INCREMENT PRIMARY KEY,
    location_id INT NOT NULL,
    observation_time TIMESTAMP NOT NULL,
    wave_height DECIMAL(6,2),
    wave_direction INTEGER,
    wave_period DECIMAL(6,2),
    swell_wave_height DECIMAL(6,2),
    swell_wave_direction INTEGER,
    swell_wave_period DECIMAL(6,2),
    wind_wave_height DECIMAL(6,2),
    sea_surface_temperature DECIMAL(6,2),
    ocean_current_velocity DECIMAL(6,2),
    ocean_current_direction INTEGER,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY unique_location (location_id),
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);

CREATE TABLE marine_forecasts (
    marine_id INT AUTO_INCREMENT PRIMARY KEY,
    location_id INT NOT NULL,
    model_id INT NOT NULL,
    forecast_reference_time TIMESTAMP NOT NULL,
    data_resolution ENUM('hourly','3hourly','daily'),
    generation_time_ms DECIMAL(8,3),
    timezone VARCHAR(50),
    utc_offset_seconds INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (location_id) REFERENCES locations(location_id),
    FOREIGN KEY (model_id) REFERENCES weather_models(model_id)
);

CREATE TABLE marine_data (
    data_id INT AUTO_INCREMENT PRIMARY KEY,
    marine_id INT NOT NULL,
    parameter_id INT NOT NULL,
    valid_time TIMESTAMP NOT NULL,
    value DECIMAL(12,6),
    unit VARCHAR(20),
    wave_component ENUM('total','wind_wave','swell','secondary_swell','tertiary_swell'),
    sea_condition ENUM('calm','smooth','slight','moderate','rough','very_rough','high','very_high','phenomenal'),
    quality_flag ENUM('good','fair','poor','missing') DEFAULT 'good',
    UNIQUE KEY unique_marine_param_time (marine_id, parameter_id, valid_time),
    FOREIGN KEY (marine_id) REFERENCES marine_forecasts(marine_id),
    FOREIGN KEY (parameter_id) REFERENCES weather_parameters(parameter_id)
);

CREATE TABLE marine_forecasts_daily (
    forecast_day_id INT AUTO_INCREMENT PRIMARY KEY,
    location_id INT NOT NULL,
    model_id INT NOT NULL,
    valid_date DATE NOT NULL,
    wave_height_max DECIMAL(6,2),
    wave_direction_dominant INTEGER,
    wave_period_max DECIMAL(6,2),
    swell_wave_height_max DECIMAL(6,2),
    swell_wave_direction_dominant INTEGER,
    sea_surface_temperature_mean DECIMAL(6,2),
    ocean_current_velocity_max DECIMAL(6,2),
    forecast_reference_time TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY unique_location_model_date (location_id, model_id, valid_date),
    FOREIGN KEY (location_id) REFERENCES locations(location_id),
    FOREIGN KEY (model_id) REFERENCES weather_models(model_id)
);

-- Satellite Radiation
CREATE TABLE satellite_radiation_data (
    radiation_id INT AUTO_INCREMENT PRIMARY KEY,
    location_id INT NOT NULL,
    observation_time TIMESTAMP NOT NULL,
    satellite_provider VARCHAR(50),
    shortwave_radiation DECIMAL(8,2),
    direct_radiation DECIMAL(8,2),
    diffuse_radiation DECIMAL(8,2),
    direct_normal_irradiance DECIMAL(8,2),
    global_tilted_irradiance DECIMAL(8,2),
    terrestrial_radiation DECIMAL(8,2),
    panel_tilt_angle INTEGER,
    panel_azimuth_angle INTEGER,
    quality_flag ENUM('good','fair','poor') DEFAULT 'good',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);


-- Climate Change
CREATE TABLE climate_projections (
    climate_id INT AUTO_INCREMENT PRIMARY KEY,
    location_id INT NOT NULL,
    model_id INT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    disable_bias_correction BOOLEAN DEFAULT FALSE,
    cell_selection ENUM('land','sea','nearest') DEFAULT 'land',
    generation_time_ms DECIMAL(8,3),
    timezone VARCHAR(50),
    utc_offset_seconds INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY unique_location_model_dates (location_id, model_id, start_date, end_date),
    FOREIGN KEY (location_id) REFERENCES locations(location_id),
    FOREIGN KEY (model_id) REFERENCES weather_models(model_id)
);

CREATE TABLE climate_daily (
    data_id INT AUTO_INCREMENT PRIMARY KEY,
    climate_id INT NOT NULL,
    valid_date DATE NOT NULL,
    temperature_2m_max DECIMAL(6,2),
    temperature_2m_min DECIMAL(6,2),
    temperature_2m_mean DECIMAL(6,2),
    precipitation_sum DECIMAL(8,2),
    rain_sum DECIMAL(8,2),
    snowfall_sum DECIMAL(8,2),
    relative_humidity_2m_max DECIMAL(5,2),
    relative_humidity_2m_min DECIMAL(5,2),
    relative_humidity_2m_mean DECIMAL(5,2),
    wind_speed_10m_mean DECIMAL(6,2),
    wind_speed_10m_max DECIMAL(6,2),
    pressure_msl_mean DECIMAL(7,2),
    cloud_cover_mean DECIMAL(5,2),
    shortwave_radiation_sum DECIMAL(8,2),
    soil_moisture_0_to_10cm_mean DECIMAL(6,3),
    UNIQUE KEY unique_climate_date (climate_id, valid_date),
    FOREIGN KEY (climate_id) REFERENCES climate_projections(climate_id)
);

-- Weather Codes

CREATE TABLE weather_codes (
    code_id INT AUTO_INCREMENT PRIMARY KEY,
    wmo_code INTEGER NOT NULL UNIQUE,
    code_description VARCHAR(200),
    weather_category VARCHAR(50),
    severity ENUM('light','moderate','heavy','violent'),
    icon_code VARCHAR(20),
    is_precipitation BOOLEAN DEFAULT FALSE,
    is_severe BOOLEAN DEFAULT FALSE
);

CREATE TABLE weather_code_translations (
    translation_id INT AUTO_INCREMENT PRIMARY KEY,
    code_id INT NOT NULL,
    language_code VARCHAR(5),
    description VARCHAR(200),
    short_description VARCHAR(100),
    FOREIGN KEY (code_id) REFERENCES weather_codes(code_id)
);
-- Alerts
CREATE TABLE weather_alerts (
    alert_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    location_id INT NOT NULL,
    parameter_id INT NOT NULL,
    alert_name VARCHAR(100),
    alert_type ENUM('threshold','range','change','forecast'),
    condition_operator ENUM('>','<','>=','<=','=','between','outside'),
    threshold_value DECIMAL(12,6),
    threshold_min DECIMAL(12,6),
    threshold_max DECIMAL(12,6),
    forecast_hours INTEGER,
    is_active BOOLEAN DEFAULT TRUE,
    notification_methods JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_triggered TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (location_id) REFERENCES locations(location_id),
    FOREIGN KEY (parameter_id) REFERENCES weather_parameters(parameter_id)
);

CREATE TABLE alert_notifications (
    notification_id INT AUTO_INCREMENT PRIMARY KEY,
    alert_id INT NOT NULL,
    user_id INT NOT NULL,
    trigger_value DECIMAL(12,6),
    trigger_timestamp TIMESTAMP,
    notification_method ENUM('email','sms','push','in_app'),
    notification_status ENUM('sent','delivered','failed','pending') DEFAULT 'pending',
    message_content TEXT,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    delivered_at TIMESTAMP,
    FOREIGN KEY (alert_id) REFERENCES weather_alerts(alert_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- Systems, Queries, AI
CREATE TABLE weather_analysis (
    analysis_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    location_id INT NOT NULL,
    analysis_type ENUM('trend','comparison','anomaly','prediction','summary','recommendation'),
    analysis_period_start TIMESTAMP,
    analysis_period_end TIMESTAMP,
    parameters_analyzed JSON,
    analysis_query TEXT,
    analysis_result JSON,
    summary_text TEXT,
    confidence_score DECIMAL(5,4),
    ai_model_used VARCHAR(100),
    processing_time_ms INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_public BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);

CREATE TABLE user_queries (
    query_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    location_id INT,
    query_text TEXT,
    query_type VARCHAR(50),
    intent_detected VARCHAR(100),
    entities_extracted JSON,
    response_text TEXT,
    response_data JSON,
    satisfaction_rating INTEGER,
    processing_time_ms INTEGER,
    api_calls_made INTEGER DEFAULT 0,
    tokens_used INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    session_id VARCHAR(100),
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);

CREATE TABLE api_requests (
    request_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    location_id INT,
    api_endpoint VARCHAR(50),
    request_url TEXT,
    parameters_requested JSON,
    models_used JSON,
    request_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    response_status INTEGER,
    response_time_ms INTEGER,
    generation_time_ms DECIMAL(8,3),
    data_points_returned INTEGER,
    error_message TEXT,
    cache_hit BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);

CREATE TABLE system_config (
    config_id INT AUTO_INCREMENT PRIMARY KEY,
    config_key VARCHAR(100) NOT NULL UNIQUE,
    config_value TEXT,
    config_type ENUM('string','integer','float','boolean','json'),
    description TEXT,
    is_public BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE data_quality_metrics (
    metric_id INT AUTO_INCREMENT PRIMARY KEY,
    model_id INT NOT NULL,
    parameter_id INT NOT NULL,
    location_id INT,
    date_period DATE NOT NULL,
    accuracy_score DECIMAL(5,4),
    completeness_score DECIMAL(5,4),
    timeliness_score DECIMAL(5,4),
    consistency_score DECIMAL(5,4),
    overall_quality DECIMAL(5,4),
    data_points_evaluated INTEGER,
    anomalies_detected INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (model_id) REFERENCES weather_models(model_id),
    FOREIGN KEY (parameter_id) REFERENCES weather_parameters(parameter_id),
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);
